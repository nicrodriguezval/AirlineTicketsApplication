/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontera;

import Control.ValidarReserva;
import DAO.VueloDAO;
import Entidad.Vuelo;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.ImageIcon;

/**
 *
 * @author nicro
 */
public class ReservationVuelta extends javax.swing.JFrame {
    
    private VueloDAO vdao = new VueloDAO();
    
    private boolean esEquipaje;
    private String lugarOrigen, lugarDestino, fechaSalida ,horaSalida, categoria1, peso1; 
    private int puestos, peso; //Hasta acá es la información de la ida
    
    private boolean esEquipajeVuelta;
    private String fechaVuelta, horaVuelta, categoriaVuelta, peso1Vuelta; 
    private int puestosVuelta, pesoVuelta;
    
    /**
     * Creates new form reservationVuelta
     */

    public ReservationVuelta(boolean esEquipaje, String lugarOrigen, String lugarDestino, String fechaSalida, String horaSalida, String categoria1, String peso1, int puestos, int peso) {
        this.esEquipaje = esEquipaje;
        this.lugarOrigen = lugarOrigen;
        this.lugarDestino = lugarDestino;
        this.fechaSalida = fechaSalida;
        this.horaSalida = horaSalida;
        this.categoria1 = categoria1;
        this.peso1 = peso1;
        this.puestos = puestos;
        this.peso = peso;
        puestosVuelta = puestos;
        categoriaVuelta = categoria1;
        
        initComponents();
        this.setTitle("Airline Tickets Application");
        this.setIconImage(new ImageIcon(getClass().getResource("../Imagenes/icono avion.png")).getImage());
        configuracionInicial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        titulo = new javax.swing.JLabel();
        origen = new javax.swing.JLabel();
        destino = new javax.swing.JLabel();
        hora = new javax.swing.JLabel();
        horaCB = new javax.swing.JComboBox<>();
        noPuestos = new javax.swing.JLabel();
        categoria = new javax.swing.JLabel();
        equipaje = new javax.swing.JLabel();
        equipajeCB = new javax.swing.JCheckBox();
        pesoEquipaje = new javax.swing.JLabel();
        pesoEquipajeCB = new javax.swing.JComboBox<>();
        cancelar = new javax.swing.JButton();
        siguiente = new javax.swing.JButton();
        origenVuelta = new javax.swing.JLabel();
        destinoVuelta = new javax.swing.JLabel();
        fecha = new javax.swing.JLabel();
        fechaCB = new javax.swing.JComboBox<>();
        noPuestosL = new javax.swing.JLabel();
        categoriaL = new javax.swing.JLabel();
        aviso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelPrincipal.setBackground(java.awt.Color.white);

        titulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titulo.setText("Informaciónde vuelo de vuelta");

        origen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        origen.setText("Origen");

        destino.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        destino.setText("Destino");

        hora.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hora.setText("Hora");

        horaCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaCBActionPerformed(evt);
            }
        });

        noPuestos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noPuestos.setText("No. puestos");

        categoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        categoria.setText("Categoría");

        equipaje.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        equipaje.setText("Equipaje");

        equipajeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipajeCBActionPerformed(evt);
            }
        });

        pesoEquipaje.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pesoEquipaje.setText("Peso del equipaje");

        pesoEquipajeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10-20 Kg", "21-30 Kg", "30-40 Kg", "40-50 Kg" }));
        pesoEquipajeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesoEquipajeCBActionPerformed(evt);
            }
        });

        cancelar.setText("Volver");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        siguiente.setText("Siguiente");
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });

        origenVuelta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        destinoVuelta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        fecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fecha.setText("Fecha");

        fechaCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaCBActionPerformed(evt);
            }
        });

        noPuestosL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        categoriaL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        aviso.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(titulo)
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(pesoEquipaje, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pesoEquipajeCB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(equipaje)
                        .addGap(18, 18, 18)
                        .addComponent(equipajeCB))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(categoria)
                                            .addComponent(fecha))
                                        .addGap(18, 18, 18)
                                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(fechaCB, 0, 88, Short.MAX_VALUE)
                                            .addComponent(categoriaL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelPrincipalLayout.createSequentialGroup()
                                        .addComponent(origen)
                                        .addGap(18, 18, 18)
                                        .addComponent(origenVuelta, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(47, 47, 47)
                                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(noPuestos)
                                            .addComponent(hora))
                                        .addGap(18, 18, 18)
                                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(horaCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(noPuestosL, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                                        .addComponent(destino)
                                        .addGap(18, 18, 18)
                                        .addComponent(destinoVuelta, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(aviso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(siguiente)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(titulo)
                .addGap(40, 40, 40)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(origen)
                        .addComponent(origenVuelta, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(destinoVuelta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(destino)))
                .addGap(30, 30, 30)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hora)
                            .addComponent(fecha)
                            .addComponent(fechaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(categoria)
                                .addComponent(categoriaL, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(noPuestos)))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(horaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(noPuestosL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(equipaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesoEquipaje, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(pesoEquipajeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(equipajeCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aviso, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelar)
                    .addComponent(siguiente))
                .addGap(28, 28, 28))
        );

        getContentPane().add(panelPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 410));

        pack();
    }// </editor-fold>                        

    private void horaCBActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        horaVuelta = horaCB.getItemAt(horaCB.getSelectedIndex());
    }                                      

    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        horaVuelta = horaCB.getItemAt(horaCB.getSelectedIndex());
        fechaVuelta = fechaCB.getItemAt(fechaCB.getSelectedIndex());
        esEquipajeVuelta = equipajeCB.isSelected();
        
        ValidarReserva validar = new ValidarReserva();
        
        System.out.println("-------");
        String resultado = validar.VerificarReservaVuelta(fechaVuelta, horaVuelta);
        System.out.println(resultado);
        
        aviso.setForeground(Color.red);

        if(resultado.equals("Fecha de vuelo inválida. Por favor escoja una de las opciones")){
            aviso.setText("Fecha de vuelo inválida. Por favor escoja una de las opciones");
        } else if(resultado.equals("Hora de vuelo inválida. Por favor escoja una de las opciones")){
            aviso.setText("Hora de vuelo inválida. Por favor escoja una de las opciones");
        } else{
        
        if(esEquipajeVuelta) {
            peso1Vuelta = pesoEquipajeCB.getItemAt(pesoEquipajeCB.getSelectedIndex());
            pesoVuelta = pesoEquipajeCB.getSelectedIndex() + 1;
        }
        
        else {
            peso1Vuelta = "Ninguno";
            pesoVuelta = 0;
        }
        
        Vuelo vueloIda = null;
        Vuelo vueloVuelta = null;

        if(vdao.leer(lugarOrigen,lugarDestino,fechaSalida,horaSalida) != null){
            vueloIda = vdao.leer(lugarOrigen,lugarDestino,fechaSalida,horaSalida);
        }
                
        if(vdao.leer(lugarDestino,lugarOrigen,fechaVuelta,horaVuelta) != null){
            vueloVuelta = vdao.leer(lugarDestino,lugarOrigen,fechaVuelta,horaVuelta);
        }
        
            //for(Vuelo v : sistema.getVuelos()) {

            // if(v.getOrigen().equals(lugarOrigen) && v.getDestino().equals(lugarDestino) && v.getFecha().equals(fechaSalida) && v.getHora().equals(horaSalida))
            //        vueloIda = v;
                
            //    if(v.getOrigen().equals(lugarDestino) && v.getDestino().equals(lugarOrigen) && v.getFecha().equals(fechaVuelta) && v.getHora().equals(horaVuelta))
            //        vueloVuelta = v;
            //}
        
        ReservationResumen rResumen = new ReservationResumen(/*idReserva++,*/ vueloIda, puestos, categoria1, esEquipaje, peso, peso1, true);
        
        rResumen.setVueloVuelta1(vueloVuelta);
        rResumen.setCategoriaVuelta(categoriaVuelta);
        rResumen.setIsEquipajeVuelta(esEquipajeVuelta);
        rResumen.setPuestosReservadosVuelta(puestosVuelta);
        rResumen.setPeso1vuelta(peso1Vuelta);
        rResumen.setPesoVuelta(pesoVuelta);
       
        
        this.setVisible(false);
        rResumen.setLocationRelativeTo(this);
        rResumen.setVisible(true);
        rResumen.setAlwaysOnTop(true);
        }
    }                                         

    private void pesoEquipajeCBActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        peso1Vuelta = pesoEquipajeCB.getItemAt(pesoEquipajeCB.getSelectedIndex());
        pesoVuelta = pesoEquipajeCB.getSelectedIndex() + 1;
    }                                              

    private void equipajeCBActionPerformed(java.awt.event.ActionEvent evt) {                                           
        esEquipajeVuelta = equipajeCB.isSelected();

        if(esEquipaje) {
            pesoEquipaje.setVisible(true);
            pesoEquipajeCB.setVisible(true);
        }

        else {
            pesoEquipaje.setVisible(false);
            pesoEquipajeCB.setVisible(false);
        }
    }                                          

    private void fechaCBActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        fechaVuelta = fechaCB.getItemAt(fechaCB.getSelectedIndex());
        ArrayList<String> al = new ArrayList<>();
        int count = 0;
        String query = "v.origen LIKE '"+lugarDestino+"' AND v.destino LIKE '"+lugarOrigen+"' AND v.fecha LIKE '"+fechaVuelta+"'";
        for(Vuelo v : vdao.leerquerytolist(query)){
            count++;
            al.add(v.getHora());
        }
        
        String horasSalida[] = new String[(count + 1)];
        horasSalida[0] = "Ninguna";
        
        for(int i = 0; i < count; i++)
            horasSalida[(i + 1)] = al.get(i);
        
        horaCB.setModel(new javax.swing.DefaultComboBoxModel<>(horasSalida));
    }                                       

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        this.setVisible(false);
        ReservationIda reservacion = new ReservationIda();
        reservacion.setLocationRelativeTo(this);
        reservacion.setVisible(true);
        reservacion.isAlwaysOnTop();
    }                                        

    private void configuracionInicial() {
        origenVuelta.setText(lugarDestino);
        destinoVuelta.setText(lugarOrigen);
        noPuestosL.setText(("" + puestosVuelta));
        categoriaL.setText(categoriaVuelta);
        pesoEquipaje.setVisible(false);
        pesoEquipajeCB.setVisible(false);
        
        ArrayList<String> al = new ArrayList<>();
        int count = 0;
        String query = "v.origen LIKE '"+lugarDestino+"' AND v.destino LIKE '"+lugarOrigen+"'";
        for(Vuelo v : vdao.leerquerytolist(query)){
            count++;
            al.add(v.getFecha());
        }
        
        String fechaVuelta[] = new String[(count + 1)];
        fechaVuelta[0] = "Ninguna";
        
        for(int i = 0; i < count; i++)
            fechaVuelta[(i + 1)] = al.get(i);
        
        fechaCB.setModel(new javax.swing.DefaultComboBoxModel<>(fechaVuelta));
        horaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Ninguna"}));
        pesoEquipajeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"10-20 Kg", "21-30 Kg", "30-40 Kg", "40-50 Kg"}));
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel aviso;
    private javax.swing.JButton cancelar;
    private javax.swing.JLabel categoria;
    private javax.swing.JLabel categoriaL;
    private javax.swing.JLabel destino;
    private javax.swing.JLabel destinoVuelta;
    private javax.swing.JLabel equipaje;
    private javax.swing.JCheckBox equipajeCB;
    private javax.swing.JLabel fecha;
    private javax.swing.JComboBox<String> fechaCB;
    private javax.swing.JLabel hora;
    private javax.swing.JComboBox<String> horaCB;
    private javax.swing.JLabel noPuestos;
    private javax.swing.JLabel noPuestosL;
    private javax.swing.JLabel origen;
    private javax.swing.JLabel origenVuelta;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JLabel pesoEquipaje;
    public javax.swing.JComboBox<String> pesoEquipajeCB;
    private javax.swing.JButton siguiente;
    private javax.swing.JLabel titulo;
    // End of variables declaration                   
}


